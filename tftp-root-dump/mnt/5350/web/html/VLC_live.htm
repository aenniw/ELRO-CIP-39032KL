<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title></title>
<style type="text/css">
body,font,td{font:normal 13px Arial,sans-serif}
</style>
<script src="public.js"></script>
<script src="get_camera_params.cgi"></script>
<script>
var R320_240=8;
var R640_480=32;
var ptz_type=0;	
if(top.client_minor==4) ptz_type=1;
var PTZ_STOP=1;
var TILT_UP=0;
var TILT_UP_STOP=1;
var TILT_DOWN=2;
var TILT_DOWN_STOP=3;
var PAN_LEFT=4;
var PAN_LEFT_STOP=5;
var PAN_RIGHT=6;
var PAN_RIGHT_STOP=7;
var PTZ_LEFT_UP=90;
var PTZ_RIGHT_UP=91;
var PTZ_LEFT_DOWN=92;
var PTZ_RIGHT_DOWN=93;
var PTZ_CENTER=25;
var PTZ_VPATROL=26;
var PTZ_VPATROL_STOP=27;
var PTZ_HPATROL=28;
var PTZ_HPATROL_STOP=29;
var PTZ_PELCO_D_HPATROL=20;
var PTZ_PELCO_D_HPATROL_STOP=21;
var IO_ON=94;
var IO_OFF=95;

var e=navigator.userAgent.toLowerCase();
var isOpera=e.indexOf("opera")!=-1;
var isIE=document.all&&e.indexOf("msie")!=-1&&!isOpera;
var plugin_installed=0;

if (navigator.plugins && navigator.plugins.length) 
{ 
	for (x=0; x<navigator.plugins.length;x++) 
	{ 
    	//if (navigator.plugins[x].name=='VLC Multimedia Plug-in') 
    	if ( (navigator.plugins[x].name=='VLC Multimedia Plug-in') || (navigator.plugins[x].name=='VLC Web Plugin') ) 
		{	
			plugin_installed=1;
			break;
		} 
	} 
} 
else if (window.ActiveXObject) 
{ 
	try
	{ 
		o=new ActiveXObject('VideoLAN.VLCPlugin.2'); 
		if (o) 
		{
			plugin_installed=1;
			delete o;
		}	
	} 
	catch(e) 
	{
	} 
}
if (!plugin_installed)
	location.replace('vlc_noplugin.htm');
function vlc_play()
{
	var vlc=document.getElementById('vlc_player');
	
	if(resolution == 2)
	{
		vlc.style.width=160;
		vlc.style.height=120;
	}	
	else if (resolution == 8)
	{
		vlc.style.width=320;
		vlc.style.height=240;
	}	
	else if (resolution == 32)
	{
		vlc.style.width=640;
		vlc.style.height=480;
	}
	else
	{
		vlc.style.width=320;
		vlc.style.height=240;
	}
	
	var port;
	var cache_value;
	var str_options='';//用来组装视频缓存的值
	if (location.port=='')
		port=80;
	else
		port=location.port;	
	
	cache_value = getcookie('cache_value');
	
	if(cache_value=='' || cache_value == null)
	{
		cache_value = 500;
		setcookie('cache_value',500,720);
	}

	str_options = ":http-caching=" + cache_value;	
	
	vlc.playlist.items.clear();
	var options=new Array(str_options);
	var url='http://'+location.hostname+':'+port+'/videostream.asf?user='+top.user+'&pwd='+top.pwd;
	//alert(url);
	vlc.playlist.add(url,'live video',options);
	vlc.playlist.play();
		
	vlc.audio.volume=200;
	

}
function vlc_stop()
{
    var vlc=document.getElementById('vlc_player');
//    alert("aaa");
	if (vlc.playlist.items.count && vlc.playlist.isPlaying) 
	{
	    document.getElementById("vlc_ie").style.display="none";
	    vlc.playlist.stop();
	}
		
}
function vlc_togglePause()
{
	var vlc=document.getElementById('vlc_player');
	if (vlc.playlist.items.count && vlc.playlist.isPlaying) 
		vlc.playlist.vlc_togglePause();
}

function decoder_control(command)
{
	action_zone.location='decoder_control.cgi?command='+command;
}
function camera_control(param,value)
{
    action_zone.location='camera_control.cgi?param='+param+'&value='+value;
}

function set_preset(cmd)
{
    decoder_control(cmd);
}
function use_preset(cmd)
{
    decoder_control(cmd);
}
function set_flip(t,d)
{
    if(t==1)
    {
        if(d)
        {
            flip|=1;
        }
        else
        {
            flip&=2;
        }
    }
    else if(t==2)
    {
        if(d)
        {
            flip|=2;
        }
        else
        {
            flip&=1;
        }
    }
			
	camera_control(5,flip);
}

function switchon_onclick(v)
{
    decoder_control(v);
}
function up_onmousedown() 
{
	(flip&0x01)?decoder_control(TILT_DOWN):decoder_control(TILT_UP);
}
function up_onmouseup() 
{
	if (!ptz_type)
		decoder_control(PTZ_STOP);
	else if (flip&0x01)
		decoder_control(TILT_DOWN_STOP);
	else	
		decoder_control(TILT_UP_STOP);
}
function down_onmousedown() 
{
	(flip&0x01)?decoder_control(TILT_UP):decoder_control(TILT_DOWN);
}
function down_onmouseup() 
{
	if (!ptz_type)
		decoder_control(PTZ_STOP);
	else if (flip&0x01)
		decoder_control(TILT_UP_STOP);
	else
		decoder_control(TILT_DOWN_STOP);	
}
function left_onmousedown() 
{
	(flip&0x02)?decoder_control(PAN_RIGHT):decoder_control(PAN_LEFT);
}
function left_onmouseup() 
{
	if (!ptz_type)
		decoder_control(PTZ_STOP);
	else if (flip&0x02)
		decoder_control(PAN_RIGHT_STOP);
	else	
		decoder_control(PAN_LEFT_STOP);	
}
function right_onmousedown() 
{
	(flip&0x02)?decoder_control(PAN_LEFT):decoder_control(PAN_RIGHT);
}
function right_onmouseup() 
{
	if (!ptz_type)
		decoder_control(PTZ_STOP);
	else if (flip&0x02)
		decoder_control(PAN_LEFT_STOP);
	else	
		decoder_control(PAN_RIGHT_STOP);
}
function leftup_onmousedown() 
{
	if (ptz_type)
		return;
	if ((flip&0x03)==0x03)
		decoder_control(PTZ_RIGHT_DOWN);
	else if (flip&0x02)
		decoder_control(PTZ_RIGHT_UP);
	else if (flip&0x01)
		decoder_control(PTZ_LEFT_DOWN);
	else		
		decoder_control(PTZ_LEFT_UP);
}
function leftup_onmouseup() 
{
	if (!ptz_type) decoder_control(PTZ_STOP);
}
function rightup_onmousedown() 
{
	if (ptz_type)
		return;
	if ((flip&0x03)==0x03)
		decoder_control(PTZ_LEFT_DOWN);
	else if (flip&0x02)
		decoder_control(PTZ_LEFT_UP);
	else if (flip&0x01)
		decoder_control(PTZ_RIGHT_DOWN);
	else		
		decoder_control(PTZ_RIGHT_UP);
}
function rightup_onmouseup() 
{
	if (!ptz_type) decoder_control(PTZ_STOP);
}
function leftdown_onmousedown() 
{
	if (ptz_type)
		return;
	if ((flip&0x03)==0x03)
		decoder_control(PTZ_RIGHT_UP);
	else if (flip&0x02)
		decoder_control(PTZ_RIGHT_DOWN);
	else if (flip&0x01)
		decoder_control(PTZ_LEFT_UP);
	else		
		decoder_control(PTZ_LEFT_DOWN);
}
function leftdown_onmouseup() 
{
	if (!ptz_type) decoder_control(PTZ_STOP);
}
function rightdown_onmousedown() 
{
	if (ptz_type)
		return;
	if ((flip&0x03)==0x03)
		decoder_control(PTZ_LEFT_UP);
	else if (flip&0x02)
		decoder_control(PTZ_LEFT_DOWN);
	else if (flip&0x01)
		decoder_control(PTZ_RIGHT_UP);
	else		
		decoder_control(PTZ_RIGHT_DOWN);
}
function rightdown_onmouseup() 
{
	if (!ptz_type) decoder_control(PTZ_STOP);
}
function center_onclick() 
{
	if (!ptz_type) decoder_control(PTZ_CENTER);
}
function gocenter()
{
    center_onclick();
}
function vpatrol()
{
    if (!ptz_type) decoder_control(PTZ_VPATROL);
}

function vpatrolstop()
{
    if (!ptz_type) decoder_control(PTZ_VPATROL_STOP);
}
function hpatrol_onclick() 
{
	ptz_type?decoder_control(PTZ_PELCO_D_HPATROL):decoder_control(PTZ_HPATROL);
}
function hpatrolstop_onclick() 
{
	ptz_type?decoder_control(PTZ_PELCO_D_HPATROL_STOP):decoder_control(PTZ_HPATROL_STOP);
}
function set_M(v,_v)
{
    camera_control(v,_v);
    if(v==0)
    {
    setTimeout('location.reload()',2000);
    }
}
function default_all()
{
    //set_M(0,8);
    //set_M(3,0);
    plus_brightness(7);
    plus_contrast(4)
}
function plus_brightness(val)
{
	camera_control(1,val*16);
}
function minus_brightness(val)
{
    camera_control(1,val*16);
}
function plus_contrast(val)
{
	camera_control(2,val);
}
function minus_contrast(val)
{
	camera_control(2,val);
}
function set_action(v)
{
    if(v==1) //play
    {
    }
    else if(v==2) //stop
    {
    }
    else if(v==3) //snapshot
    {
    }
    else if(v==4) //record
    {
    }
    else if(v==5) //audio
    {
    }
    else if(v==6) //talk
    {
    }
}


</script>
</head>
<body bgcolor="#ffffff" text="#000000" link="#0000cc" vlink="#0000cc" marginheight="0" topmargin="0" rightmargin="0" leftmargin="0" alink="#ff0000" onunload="vlc_stop()" onload="vlc_play()">
<iframe name="action_zone" style="display:none"></iframe>
<table border="0" cellpadding="0" cellspacing="0" width="640" height="480">
<tr>
<td bgcolor="black" align="center" valign="middle">
<script id="vlc_ie">
		if(isIE)
			document.write('<OBJECT classid=clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921 id="vlc_player"><param name="Visible" value="True"/><param name="AutoLoop" value="False"/><param name="AutoPlay" value="False"/></OBJECT>');
 		else
			document.write('<embed type="application/x-vlc-plugin" id="vlc_player" name="vlc_player" autoplay="no" loop="no" ></embed>');
</script>
</td></tr></table>


</body>
</html>